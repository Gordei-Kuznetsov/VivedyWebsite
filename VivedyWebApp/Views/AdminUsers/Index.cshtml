@model IEnumerable<VivedyWebApp.Models.ViewModels.AdminUsersViewModel>

@{
    ViewBag.Title = "Admin | Users";
}

<div class="card" style="margin:5rem">
    <nav class="nav nav-pills nav-fill  row no-gutters phenomena-sm" style="background-color: #a8000a;">
        <a class="nav-item nav-link raijaLink" href="/AdminMovies/Index">MOVIES</a>
        <a class="nav-item nav-link raijaLink" href="/AdminBookings/Index">BOOKINGS</a>
        <a class="nav-item nav-link raijaLink" href="/AdminRotations/Index">ROTATIONS</a>
        <a class="nav-item nav-link raijaLink"
            style="background-color: #f0f0f0; color: #222; border-radius: 0rem; border-top: 5px solid #a8000a;">
            USERS
        </a>
    </nav>
    <div class="white-bg-color">
        <a class="btn btn-danger  phenomena-sm " href="/AdminUsers/Create">ADD <i class="fas fa-plus"></i></a>
        <input type="search" class="mb-3  float-right" id="Search"  placeholder="Search by User Email...">
        <br>
        <table class="table table-striped  phenomena-sm" style="border: 8px solid #a8000a; color: #222;">
            <thead>
                <tr class="text-center ">
                    <th scope="col">
                        User @Html.DisplayNameFor(model => model.Id)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.EmailConfirmed)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.PhoneNumber)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.PhoneNumberConfirmed)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Role)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.UserName)
                    </th>
                    <th scope="col">

                    </th>
                </tr>
            </thead>
            <tbody id="myTable">
                @foreach (var item in Model)
                {
                    <tr class="text-center">
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td class="userEmail">
                            @Html.DisplayFor(modelItem => item.Email, new { htmlAttributes = new { @class = "text-link" } })
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmailConfirmed)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhoneNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhoneNumberConfirmed)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Role)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UserName)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", "AdminUsers", routeValues: new { id = item.Id }, htmlAttributes: new { @class = "btn btn-danger  phenomena-sm ", style = "font-size: .7rem;" }) |
                            @Html.ActionLink("Details", "Details", "AdminUsers", routeValues: new { id = item.Id }, htmlAttributes: new { @class = "btn btn-danger  phenomena-sm ", style = "font-size: .7rem;" }) |
                            @Html.ActionLink("Delete", "Delete", "AdminUsers", routeValues: new { id = item.Id }, htmlAttributes: new { @class = "btn btn-danger  phenomena-sm ", style = "font-size: .7rem;" })
                        </td>
                    </tr>
                 }
            </tbody>
        </table>
    </div>
</div>
<script>
    let Search;
    let rowslist = Array();

    window.onload = function () {
        Search = document.getElementById("Search");
        Search.oninput = SearchForUser;

        rowslist = document.getElementById("myTable").getElementsByTagName("tr");
        for (let i = 0; i < rowslist.length; i++) {
            rowslist[i].unmatched = false;
            rowslist[i].userEmail = rowslist[i].getElementsByClassName("userEmail")[0].getElementsByTagName("a")[0].innerHTML;
        }
    }
    function SearchForUser() {
        for (let i = 0; i < rowslist.length; i++) {
            if (rowslist[i].userEmail.indexOf(Search.value) > -1) {
                rowslist[i].unmatched = false;
                rowslist[i].style.display = "";
            }
            else {
                rowslist[i].unmatched = true;
                rowslist[i].style.display = "none";
            }
        };
    }
</script>
@model VivedyWebApp.Models.ViewModels.AdminUsersViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-horizontal">
        <h4>ApplicationUser</h4>
        <hr />


        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Role, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Role, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

    <div class="card mx-auto " style="width: auto; margin-top: 5rem; margin-bottom: 3rem;">
        <div class="white-bg-color mx-auto text-dark " style="width: 750px; border: .5rem solid #a8000a;">
            <div class="mb-5 mt-4 phenomena-sm border-bottom border-dark " style="color: #a8000a"><h1 class="display-5">USER DETAILS</h1></div>
            <div class="border-bottom">
                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(model => model.Name) : </div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "col-md-12" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(model => model.Email) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "col-md-12" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(model => model.PhoneNumber) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "col-md-12" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(m => m.Password) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.PasswordFor(m => m.Password, new { @class = "col-md-12" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(m => m.ConfirmPassword) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "col-md-12" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(m => m.Role) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.PasswordFor(m => m.Role, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                    </div>
                </div>
                

            </div>




            <div class="row">
                <div class="form-check phenomena-sm col-8">
                    <button type="button" class="btn btn-danger pl-5 pr-5 pt-2 pb-2 mt-3 phenomena-sm " value="Create">ADD  <i class="fas fa-plus"></i></button>
                </div>
            </div>
            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

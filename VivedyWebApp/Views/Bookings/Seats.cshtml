@model VivedyWebApp.Models.ViewModels.BookingSeatsViewModel

@{
    ViewBag.Title = "Seats | Booking";
}

@using (Html.BeginForm("Seats", "Bookings", FormMethod.Post, htmlAttributes: new { role = "form", id = "seatsForm", onsubmit = "return validateTheForm()" }))
{
    @Html.AntiForgeryToken()

    <div class="jumbotron">
        <div class="row text-center">
            <div class="col-lg-9 col-sm-12 ">
                <div class=" text-center mb-5">
                    <div class="card-body align-self-center">
                        <h5 class="phenomena-sm-two">Seats</h5>
                        <hr style="width:40%" />
                        <div class="progress">
                            <div class="progress-bar bg-danger" role="progressbar" style="width: 66%;" aria-valuemin="0" aria-valuemax="100">66% Seats</div>
                        </div>
                        <hr style="width:40%" />
                        <p class="card-text">Select your seats</p>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <!--use the Model.Screening.Room.SeatLayout to determine which layout page to render (Small,Medium, or Large)-->
                        @if (Model.Screening.Room.SeatsLayout == "Small")
                        {
                            Html.Partial("_SmallSeatsLayout");
                        }
                        @if (Model.Screening.Room.SeatsLayout == "Medium")
                        {
                            Html.Partial("_MediumSeatsLayout");
                        }
                        @if (Model.Screening.Room.SeatsLayout == "Large")
                        {
                            Html.Partial("_LargeSeatsLayout");
                        }
                        
                        @Html.HiddenFor(m => m.SelectedSeats)
                        @Html.ValidationMessageFor(m => m.SelectedSeats, "", new { @class = "text-danger", id = "ValMessageSpanForSeats" })
                        @Html.HiddenFor(m => m.SelectedScreeningId)
                        <div class="align-self-center">
                            <div class="row text-center mt-4">
                                <div class="col-12">
                                    <div class=" phenomena-sm ">
                                        <input type="submit" value="Submit" class="btn btn-danger pl-4 pr-4 pb-2 pt-2 phenomena-sm ">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-sm-12">
                <div class="card mb-5">
                    <img src="~/Content/Images/@Model.Movie.Id-VerticalPoster.png" class="card-img-top" alt="Movie Poster">
                    <div class="card-body">
                        <hr />
                        <h5 class="phenomena-sm-two mt-4 text-center">@Model.Movie.Name</h5>
                        <hr />
                        <div class="p-2 phenomena-sm"> Catoegry: <span class="badge badge-pill badge-secondary">@Model.Movie.Category</span></div>
                        <div class="p-2 phenomena-sm"> Rating: <span class="badge badge-pill badge-danger"> +@Model.Movie.Rating</span></div>
                        <div class="p-2 phenomena-sm">
                            Movie Duration: <span class="badge badge-pill badge-danger">
                                @Model.Movie.Duration.Hours hr
                                @Model.Movie.Duration.Minutes min
                            </span>
                        </div>
                        <div class="p-2 phenomena-sm"> User Rating: <span class="badge badge-pill badge-danger"> @Model.Movie.ViewerRating</span></div>
                        <hr />
                        <p class="card-text">@Model.Movie.Description</p>
                        <div class="phenomena-sm-two"> Ticket Price: <span style="color:white"> $@Model.Movie.Price </span></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let input = document.getElementById("SelectedSeats");
        let validator = document.getElementById("ValMessageSpanForSeats");
        let selectedSeats = [];
        let occupiedSeats = "@string.Join("", Model.OccupiedSeats.ToArray())".split(/[A-Z]\d{1,2}/g);

        window.addEventListener('load', function () {
            let seats = document.getElementsByClassName("seatLable");
            for (let i = 0; i < seats.length; i++) {
                if (occupiedSeats.includes(seats[i].textContent)) {
                    seats[i].occupied = true;
                    seats[i].selected = false;
                    seats[i].classList.remove("gray-box");
                    seats[i].classList.add("gray-box-taken")
                }
                else {
                    seats[i].occupied = false;
                    seats[i].selected = false;
                    seats[i].onclick = selectedChange;
                }
            }
        });
        function selectedChange() {
            if (!this.occupied) {
                if (this.selected) {
                    if (selectedSeats.length <= 16) {
                        validator.innerText = "";
                    }
                    this.selected = false;
                    this.classList.remove("gray-box-select");
                    this.classList.add("gray-box");
                    var index = selectedSeats.indexOf(this.textContent);
                    if (index !== -1) {
                      selectedSeats.splice(index, 1);
                    }
                }
                else {
                    if (selectedSeats.length >= 16) {
                        validator.innerText = "You can select maximum 16 seats for one booking.";
                        return;
                    }
                    this.selected = true;
                    this.classList.remove("gray-box");
                    this.classList.add("gray-box-select");
                    selectedSeats.push(this.textContent);
                }
            }
        }
        function validateTheForm() {
            if (selectedSeats.length == 0) {
                event.preventDefault();
                validator.innerText = "Please select a seat";
                return false;
            }
            else {
                input.value = selectedSeats.join("");
                return true;
            }
        }
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

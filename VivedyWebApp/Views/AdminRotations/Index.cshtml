@model IEnumerable<VivedyWebApp.Models.Rotation>

@{
    ViewBag.Title = "Admin | Rotaions";
}

<div class="card mx-auto " style="width: auto; margin-top: 5rem; margin-bottom: 3rem;">
    <nav class="nav nav-pills nav-fill  row no-gutters phenomena-sm" style="background-color: #a8000a; ">
        <a class="nav-item nav-link raijaLink " href="/AdminMovies/Index">MOVIES</a>
        <a class="nav-item nav-link raijaLink" href="/AdminBookings/Index"> BOOKINGS </a>
        <a class="nav-item nav-link raijaLink" 
            style="background-color: #f0f0f0; color: #222; border-radius: 0rem; border-top: 5px solid #a8000a;">
            ROTATIONS
        </a>
        <a class="nav-item nav-link raijaLink" href="/AdminUsers/Index">USERS </a>
    </nav>
    <div class="white-bg-color">
        <a class="btn btn-danger  phenomena-sm " href="/AdminRotations/Create">ADD <i class="fas fa-plus"></i></a>
        <input type="date" class="mb-3 float-right" id="Search" pattern="(?:19|20)\[0-9\]{2}-(?:(?:0\[1-9\]|1\[0-2\])/(?:0\[1-9\]|1\[0-9\]|2\[0-9\])|(?:(?!02)(?:0\[1-9\]|1\[0-2\])/(?:30))|(?:(?:0\[13578\]|1\[02\])-31))">
        <br>
        <table class="table table-striped  phenomena-sm" style="border: 8px solid #a8000a; color: #222;">
            <thead>
                <tr class="text-center ">
                    <th scope="col" style="width:100px">
                        @Html.DisplayNameFor(model => model.RotationId)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.StartTime)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.MovieId)
                    </th>
                    <th scope="col">

                    </th>
                </tr>
            </thead>
            <tbody id="myList">
                @foreach (var item in Model)
                {
                    <tr class="text-center">
                        <td style="width:100px; display: block; display: -webkit-box; height: 2rem; -webkit-line-clamp: 2; overflow: hidden; text-overflow: ellipsis;">
                            @Html.DisplayFor(modelItem => item.RotationId)
                        </td>
                        <td class="StartTime">
                            @{
                                string startTime = item.StartTime.ToString("dddd, dd MMMM yyyy HH:mm tt");
                                @Html.DisplayFor(modelItem => startTime)
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MovieId)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", "AdminRotations", routeValues: new { id = item.RotationId }, htmlAttributes: new { @class = "btn btn-danger  phenomena-sm ", style = "font-size: .7rem;" }) |
                            @Html.ActionLink("Details", "Details", "AdminRotations", routeValues: new { id = item.RotationId }, htmlAttributes: new { @class = "btn btn-danger  phenomena-sm ", style = "font-size: .7rem;" }) |
                            @Html.ActionLink("Delete", "Delete", "AdminRotations", routeValues: new { id = item.RotationId }, htmlAttributes: new { @class = "btn btn-danger  phenomena-sm ", style = "font-size: .7rem;" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    let Search;
    let rowslist = Array();

    window.onload = function () {
        Search = document.getElementById("Search");
        Search.oninput = SearchForStartTime;

        rowslist = document.getElementById("myList").getElementsByTagName("tr");
        for (let i = 0; i < rowslist.length; i++) {
            rowslist[i].unmatched = false;
            rowslist[i].StartTime = rowslist[i].getElementsByClassName("StartTime")[0].innerHTML;
        }
    }
    function SearchForStartTime() {
        for (let i = 0; i < rowslist.length; i++) {
            if (rowslist[i].StartTime.indexOf(Search.value) > -1) {
                rowslist[i].unmatched = false;
                rowslist[i].style.display = "";
            }
            else {
                rowslist[i].unmatched = true;
                rowslist[i].style.display = "none";
            }
        };
    }
</script>
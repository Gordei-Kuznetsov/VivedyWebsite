@model VivedyWebApp.Models.ViewModels.AdminMoviesCreateViewModel

@{
    ViewBag.Title = "Create Movie";
}

@using (Html.BeginForm("Create", "AdminMovies", FormMethod.Post, new {role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="containerOne">
        <div class="white-bg-color mx-auto  text-dark " style=" max-width: 750px; border: 0.5rem solid #a8000a;">
            <div class="mb-5 mt-4 phenomena-sm border-bottom border-dark " style="color: #a8000a"><h1 class="display-5">ADD MOVIE</h1></div>
            <div class="border-bottom">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(m => m.Name) : </div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "col-md-12" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(model => model.Rating) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "col-md-12" } })
                        @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(model => model.Category) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "col-md-12" } })
                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(m => m.Description) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.EditorFor(m => m.Description, new { htmlAttributes = new { @class = "col-md-12" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(m => m.Duration) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.EditorFor(m => m.Duration, new { htmlAttributes = new { @class = "col-md-12" } })
                        @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(m => m.Price) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.EditorFor(m => m.Price, new { htmlAttributes = new { @class = "col-md-12" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(m => m.TrailerUrl) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.EditorFor(m => m.TrailerUrl, new { htmlAttributes = new { @class = "col-md-12" } })
                        @Html.ValidationMessageFor(model => model.TrailerUrl, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(m => m.HorizontalImage) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        <input accept="image/png" class="col-md-12" data-val-file="The field Horizontal Poster must be a file."
                               data-val-required="The Horizontal Poster field is required." id="HorizontalImage"
                               name="HorizontalImage" type="file" value="">
                        @Html.ValidationMessageFor(model => model.HorizontalImage, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(m => m.VerticalImage) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        <input accept="image/png" class="col-md-12" data-val-file="The field Horizontal Poster must be a file."
                               data-val-required="The Horizontal Poster field is required." id="HorizontalImage"
                               name="HorizontalImage" type="file" value="">
                        @Html.ValidationMessageFor(model => model.VerticalImage, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-check phenomena-sm col-8">
                    <input type="submit" class="btn btn-danger pl-5 pr-5 pt-2 pb-2 mt-3  mr-4 phenomena-sm" value="Create">
                </div>
            </div>
            <div class="row">
                @Html.ActionLink("Back to List", "Index", "AdminMovies", routeValues: null, htmlAttributes: new { @class = "mt-3 text-link phenomena-sm ml-5" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


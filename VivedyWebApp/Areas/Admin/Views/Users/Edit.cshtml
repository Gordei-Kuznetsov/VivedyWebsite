@model VivedyWebApp.Areas.Admin.Models.ViewModels.UsersViewModel

@{
    ViewBag.Title = "Edit User";
}

@using (Html.BeginForm("Edit", "Users", null, FormMethod.Post, new { role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="containerOneAdmin">
        <div class="white-bg-color mx-auto text-dark " style="max-width: 750px; border: .5rem solid #a8000a;">
            <div class="mb-5 mt-4 phenomena-sm border-bottom border-dark " style="color: #a8000a"><h1 class="display-5">EDIT USER</h1></div>
            <div class="border-bottom">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(model => model.Name) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "col-md-12" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(model => model.Email) : </div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "col-md-12" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-4 phenomena-sm">@Html.LabelFor(model => model.EmailConfirmed) :</div>
                    <div class=" mb-3 col-md-8 phenomena-sm">
                        <div class="checkbox">
                            @Html.DisplayFor(model => model.EmailConfirmed)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(model => model.PhoneNumber) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "col-md-12" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-4 phenomena-sm">@Html.LabelFor(model => model.PhoneNumberConfirmed) : </div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        <div class="checkbox">
                            @Html.DisplayFor(model => model.PhoneNumberConfirmed)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-3 phenomena-sm">@Html.LabelFor(model => model.Role) :</div>
                    <div class="mb-3 col-md-8 phenomena-sm">
                        @Html.DropDownList("Role", Model.Roles, new { @class = "col-md-12" })
                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row mb-3">
                    <label class="col-3 phenomena-sm">@Html.LabelFor(model => model.UserName):</label>
                    <div class="col-md-8 mb-3 phenomena-sm">
                        @Html.DisplayFor(model => model.UserName)
                    </div>
                </div>
            </div>
            <div class="row">
                <input type="submit" class="btn btn-danger pl-5 pr-5 pt-2 pb-2 mt-3 ml-3 mr-4 phenomena-sm" value="Save">
            </div>
            <div class="row">
                @Html.ActionLink("Back to List", "Index", routeValues: null, htmlAttributes: new { @class = "mt-3 text-link phenomena-sm ml-5" })
            </div>
        </div>
    </div>  
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

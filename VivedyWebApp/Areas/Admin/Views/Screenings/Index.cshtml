@model IEnumerable<VivedyWebApp.Models.Screening>

@{
    ViewBag.Title = "Screenings";
}

<div class="adminCard">
    <div class=" mx-auto phenomena-sm display-3 text-center">
        SCREENINGS
    </div>
    <div class="white-bg-color">
        <a class="btn btn-danger  phenomena-sm " href="/Admin/Screenings/Create">ADD <i class="fas fa-plus"></i></a>
        <input type="text" class="mb-3 float-right" id="Search" placeholder="Search by Start Time...">
        <br>
        <table class="table table-striped  phenomena-sm" style="border: 8px solid #a8000a; color: #222;">
            <thead>
                <tr class="text-center ">
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.StartTime)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.MovieId)
                    </th>
                    <th scope="col" class="admin-display-sm-none">
                        @Html.DisplayNameFor(model => model.RoomId)
                    </th>
                    <th scope="col">

                    </th>
                </tr>
            </thead>
            <tbody id="myList">
                @foreach (var item in Model)
                {
                    <tr class="text-center">
                        <td class="startTime admin-display-set-width">
                            @{
                                string startTime = item.StartTime.ToString("dddd, dd MMMM yyyy HH:mm tt");
                                @Html.DisplayFor(modelItem => startTime)
                            }
                        </td>
                        <td class="admin-display-cut admin-display-sm-none">
                            @Html.ActionLink(item.Movie.Name, "Details", "Movies", routeValues: new { id = item.MovieId }, htmlAttributes: new { @class = "mt-3 text-link phenomena-sm ml-5" })
                        </td>
                        <td class="admin-display-cut admin-display-sm-none">
                            @Html.ActionLink(item.Room.Name, "Details", "Rooms", routeValues: new { id = item.RoomId }, htmlAttributes: new { @class = "mt-3 text-link phenomena-sm ml-5" })
                        </td>
                        <td>
                            <div class="admin-button">
                                @Html.ActionLink("Edit", "Edit", routeValues: new { id = item.Id }, htmlAttributes: new { @class = "btn btn-danger  phenomena-sm ", style = "font-size: .7rem;" }) |
                                @Html.ActionLink("Details", "Details", routeValues: new { id = item.Id }, htmlAttributes: new { @class = "btn btn-danger  phenomena-sm ", style = "font-size: .7rem;" }) |
                                @Html.ActionLink("Delete", "Delete", routeValues: new { id = item.Id }, htmlAttributes: new { @class = "btn btn-danger  phenomena-sm ", style = "font-size: .7rem;" })
                            </div>
                            <div class="admin-button-row">
                                <div class="row">
                                    @Html.ActionLink("Edit", "Edit", routeValues: new { id = item.Id }, htmlAttributes: new { @class = "btn btn-danger  phenomena-sm ", style = "font-size: .7rem;" })
                                </div>
                                <div class="row">
                                    @Html.ActionLink("Details", "Details", routeValues: new { id = item.Id }, htmlAttributes: new { @class = "btn btn-danger  phenomena-sm ", style = "font-size: .7rem;" })
                                </div>
                                <div class="row">
                                    @Html.ActionLink("Delete", "Delete", routeValues: new { id = item.Id }, htmlAttributes: new { @class = "btn btn-danger  phenomena-sm ", style = "font-size: .7rem;" })
                                </div>

                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<script>
    let Search;
    let rowslist = Array();

    window.onload = function () {
        Search = document.getElementById("Search");
        Search.oninput = SearchForStartTime;

        rowslist = document.getElementById("myList").getElementsByTagName("tr");
        for (let i = 0; i < rowslist.length; i++) {
            rowslist[i].unmatched = false;
            rowslist[i].startTime = rowslist[i].getElementsByClassName("startTime")[0].innerHTML;
        }
    }
    function SearchForStartTime() {
        for (let i = 0; i < rowslist.length; i++) {
            if (rowslist[i].startTime.indexOf(Search.value) > -1) {
                rowslist[i].unmatched = false;
                rowslist[i].style.display = "";
            }
            else {
                rowslist[i].unmatched = true;
                rowslist[i].style.display = "none";
            }
        };
    }
</script>